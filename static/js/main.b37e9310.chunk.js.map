{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/ui-slice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","store/index.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","totalPrice","payload","addItemToCart","newItem","existingItem","find","item","id","quantity","price","push","title","removeItemFromCart","filter","cartActions","actions","CartItem","total","dispatchFn","useDispatch","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","cartStore","cart","map","uiSlice","cartIsVisible","notification","toggle","showNotification","status","message","uiActions","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCT","Products","products","product","Notification","specialClasses","error","success","cssClasses","isLoaded","App","displayCart","uiStore","showNotif","useEffect","a","fetchData","fetch","response","ok","json","data","Error","cartData","sendRequest","method","body","JSON","stringify","headers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b37e9310.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__3lHzy\",\"details\":\"CartItem_details__3UDna\",\"quantity\":\"CartItem_quantity__3ohWn\",\"price\":\"CartItem_price__3Zvse\",\"itemprice\":\"CartItem_itemprice__3wMb6\",\"actions\":\"CartItem_actions__aCpwm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__3xcex\",\"price\":\"ProductItem_price__2Rd_o\",\"actions\":\"ProductItem_actions__1UOCk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2vDRs\",\"error\":\"Notification_error__1oDlT\",\"success\":\"Notification_success__GBPl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__27m1f\",\"badge\":\"CartButton_badge__3H1FF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1N2Yh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__33KKX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__2Efd1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1dEvQ\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n        changed: false\r\n    },\r\n    reducers: {\r\n        replaceCart(state, action) {\r\n            state.totalPrice = action.payload.totalQuantity;\r\n            state.items = action.payload.items;\r\n        },\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            state.changed = true;\r\n            if (existingItem) {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n            } else {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                })\r\n            }\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            state.totalQuantity--;\r\n            state.changed = true;\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;","import classes from './CartItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\n\nconst CartItem = (props) => {\n  const { title, quantity, total, price, id } = props.item;\n  const dispatchFn = useDispatch();\n  const increaseItem = () => {\n    dispatchFn(cartActions.addItemToCart({\n      id: id,\n      title: title,\n      price: price\n    }));\n\n  }\n\n  const decreaseItem = () => {\n    dispatchFn(cartActions.removeItemFromCart(id));\n  }\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={decreaseItem}>-</button>\n          <button onClick={increaseItem}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport { useSelector } from 'react-redux';\n\nconst Cart = (props) => {\n  const cartItems = useSelector(state => state.cartStore.items)\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((items => (\n          <CartItem key={items.id}\n            item={{ id: items.id, title: items.name, quantity: items.quantity, total: items.totalPrice, price: items.price }} />\n        )))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst uiSlice = createSlice({\r\n    name: 'ui',\r\n    initialState: { cartIsVisible: false, notification: null },\r\n    reducers: {\r\n        toggle(state) {\r\n            state.cartIsVisible = !state.cartIsVisible;\r\n        },\r\n        showNotification(state, action) {\r\n            state.notification = {\r\n                status: action.payload.status,\r\n                title: action.payload.title,\r\n                message: action.payload.message\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport default uiSlice;","import classes from './CartButton.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiActions } from '../../store/ui-slice';\n\nconst CartButton = (props) => {\n  const dispatchFn = useDispatch();\n  const cartQuantity = useSelector(state => state.cartStore.totalQuantity);\n  const handleToggleCart = () => {\n    dispatchFn(uiActions.toggle());\n  }\n  return (\n    <button className={classes.button} onClick={handleToggleCart}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\n\nconst ProductItem = (props) => {\n  const { title, price, description, id } = props;\n  const dispatchFn = useDispatch();\n  const addItemHandler = () => {\n\n    dispatchFn(cartActions.addItemToCart({\n      id: id,\n      title: title,\n      price: price\n    }));\n  }\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addItemHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst DUMMY_PRODUCT = [\n  {\n    id: 'p1',\n    price: 10,\n    title: 'Shirt',\n    description: 'A polo shirt for every need'\n  },\n  {\n    id: 'p2',\n    price: 20,\n    title: 'Sweater',\n    description: 'A woolen sweater for every need'\n  },\n];\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCT.map((product) => (\n          <ProductItem key={product.id}\n            id={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.description} />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\r\n\r\nconst Notification = (props) => {\r\n    let specialClasses = '';\r\n\r\n    if (props.status === 'error') {\r\n        specialClasses = classes.error;\r\n    }\r\n    if (props.status === 'success') {\r\n        specialClasses = classes.success;\r\n    }\r\n\r\n    const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n    return (\r\n        <section className={cssClasses}>\r\n            <h2>{props.title}</h2>\r\n            <p>{props.message}</p>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Notification;","import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Fragment, useEffect } from 'react';\nimport Notification from './components/UI/Notification';\nimport { sendCartDataActionCreator, fetchDataActionCreator } from './store/cart-actions'\n\nlet isLoaded = true;\n\nfunction App() {\n  const displayCart = useSelector(state => state.uiStore.cartIsVisible);\n  const cart = useSelector((state) => state.cartStore);\n  //console.log('what i get from store', cart); \n  const dispatchFn = useDispatch();\n  const showNotif = useSelector(state => state.uiStore.notification)\n\n  useEffect(() => {\n    dispatchFn(fetchDataActionCreator());\n  }, [dispatchFn]);\n\n  useEffect(() => {\n    if (isLoaded) {\n      isLoaded = false;\n      return;\n    }\n    if (cart.changed) {\n      dispatchFn(sendCartDataActionCreator(cart));\n    }\n\n  }, [cart, dispatchFn]);\n\n  return (\n    <Fragment>\n      <Layout>\n        {showNotif ? <Notification status={showNotif.status} title={showNotif.title} message={showNotif.message} /> : null}\n        {displayCart ? <Cart /> : null}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { cartActions } from './cart-slice';\r\nimport { uiActions } from './ui-slice';\r\n\r\nexport const fetchDataActionCreator = () => {\r\n    return async (dispatchFn) => {\r\n        const fetchData = async () => {\r\n            //old const response = await fetch('https://react-http-aafdf-default-rtdb.firebaseio.com/reduxcart.json');\r\n            const response = await fetch('https://react-redux-async-22a4c-default-rtdb.firebaseio.com/reduxcart.json');\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                return data;\r\n            } else {\r\n                throw new Error('Could not load cart data!');\r\n            }\r\n\r\n        }\r\n        try {\r\n            const cartData = await fetchData();\r\n            dispatchFn(cartActions.replaceCart({\r\n                items: cartData.items || [],\r\n                totalQuantity: cartData.totalQuantity\r\n            }));\r\n        } catch (e) {\r\n            dispatchFn(uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error!',\r\n                message: 'Fetching cart data Failed!',\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const sendCartDataActionCreator = (cartData) => {\r\n    return async (dispatchFn) => {\r\n        dispatchFn(uiActions.showNotification({\r\n            status: 'pending',\r\n            title: 'Sending...',\r\n            message: 'Sending cart data!'\r\n        }));\r\n\r\n        const sendRequest = async () => {\r\n            //old const response = await fetch('https://react-http-aafdf-default-rtdb.firebaseio.com/reduxcart.json', {\r\n            const response = await fetch('https://react-redux-async-22a4c-default-rtdb.firebaseio.com/reduxcart.json', {\r\n                method: 'PUT',\r\n                body: JSON.stringify({ items: cartData.items, totalQuantity: cartData.totalQuantity }),\r\n                headers: { 'Content-Type': 'application/json' },\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error(\"Sending cart data Failed!\");\r\n            }\r\n        }\r\n\r\n        try {\r\n            await sendRequest();\r\n            dispatchFn(uiActions.showNotification({\r\n                status: 'success',\r\n                title: 'Success!',\r\n                message: 'Sent cart data successfully!',\r\n            }));\r\n        } catch (e) {\r\n            dispatchFn(uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error!',\r\n                message: 'Sent cart data Failed!',\r\n            }));\r\n        }\r\n    };\r\n}","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport cartSlice from \"./cart-slice\";\r\nimport uiSlice from \"./ui-slice\";\r\n\r\nconst store = configureStore({\r\n    reducer: { uiStore: uiSlice.reducer, cartStore: cartSlice.reducer }\r\n});\r\n\r\nexport default store;","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store/index'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n"],"sourceRoot":""}